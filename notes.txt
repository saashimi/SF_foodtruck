# Socrata SF API endpoint:
https://data.sfgov.org/resource/6a9r-agq8.geojson
                                            ^-----outputs raw geojson

#Load up the database:
ogr2ogr -f "PostgreSQL" PG:"dbname=sf_foodtruck user=kevin" "output.geojson" 

#Ping the Socrata API
import requests
r = requests.get('https://data.sfgov.org/resource/6a9r-agq8.geojson')
with open('output.geojson', 'w') as data:
    data.write(json.dumps(r.json()))

#inject geojson into DB
ogr2ogr -f "PostgreSQL" PG:"dbname=sf_foodtruck user=kevin" "output.geojson"
ogr2ogr -f "PostgreSQL" PG:"dbname=my_database user=postgres" "source_data.json" -nln destination_table -append 
#                   ^-------if you want to append to existing table. Note that
#                           this didn't actually work for us.

# Load up postGIS 
CREATE EXTENSION postgis; 

# We learned:
SELECT applicant, address FROM foodtruck_master
WHERE ST_DWithin(wkb_geometry, ST_PointFromText('POINT(-122.418982 37.779312)',4326), 
.0044996640028797696);
# Units, in this case decimal degrees, need to be consistent if you make any 
boundary calculations.

#PostgreSQL + PostGIS backend for geometric calculations
#Leaflet for FrontEnd display?